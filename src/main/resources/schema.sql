DROP TABLE IF EXISTS
    users,
    films,
    films_likes,
    friends,
    mpa_ratings,
    films_genres,
    genres CASCADE;

CREATE TABLE IF NOT EXISTS mpa_ratings (
    mpa_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    mpa_name      varchar(10),
    CONSTRAINT uc_name UNIQUE (mpa_name)
);

CREATE TABLE IF NOT EXISTS genres (
    genre_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name     VARCHAR(30) NOT NULL,
    CONSTRAINT genre_name UNIQUE (name)
);

CREATE TABLE IF NOT EXISTS films (
    film_id      INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name         VARCHAR(150),
    description  VARCHAR(500) NOT NULL,
    release_date DATE         NOT NULL,
    duration     INTEGER      NOT NULL,
    mpa_id    INTEGER REFERENCES mpa_ratings (mpa_id)
);

CREATE TABLE IF NOT EXISTS users (
    user_id   INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email     VARCHAR(50) NOT NULL,
    login     VARCHAR(50) NOT NULL,
    user_name VARCHAR(50) NOT NULL,
    birthday  DATE        NOT NULL,
    CONSTRAINT user_email UNIQUE (email),
    CONSTRAINT user_login UNIQUE (login)
);

CREATE TABLE IF NOT EXISTS films_likes (
    film_id INTEGER NOT NULL,
    user_id INTEGER NOT NULL,
    CONSTRAINT film_like PRIMARY KEY (film_id, user_id),
    CONSTRAINT film_like_film_id FOREIGN KEY (film_id) REFERENCES films (film_id),
    CONSTRAINT film_like_user_id FOREIGN KEY (user_id) REFERENCES users (user_id)
);

CREATE TABLE IF NOT EXISTS friends (
    user_id   INTEGER NOT NULL,
    friend_id INTEGER NOT NULL,
    CONSTRAINT friendship PRIMARY KEY (user_id, friend_id),
    CONSTRAINT friendship_user_id1 FOREIGN KEY (user_id) REFERENCES users (user_id),
    CONSTRAINT friendship_user_id2 FOREIGN KEY (friend_id) REFERENCES users (user_id)
);

CREATE TABLE IF NOT EXISTS films_genres (
    film_id  INTEGER NOT NULL,
    genre_id INTEGER NOT NULL,
    CONSTRAINT genre_film PRIMARY KEY (film_id, genre_id),
    CONSTRAINT genre_film_film_id FOREIGN KEY (film_id) REFERENCES films (film_id),
    CONSTRAINT genre_film_genre_id FOREIGN KEY (genre_id) REFERENCES genres (genre_id)
);

DELETE FROM mpa_ratings;
INSERT INTO mpa_ratings (mpa_name)
VALUES('G'),
      ('PG'),
      ('PG-13'),
      ('R'),
      ('NC-17');

DELETE FROM genres;
INSERT INTO genres (name)
VALUES('Комедия'),
      ('Драма'),
      ('Мультфильм'),
      ('Триллер'),
      ('Документальный'),
      ('Боевик');