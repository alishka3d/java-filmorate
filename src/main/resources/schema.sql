DROP TABLE IF EXISTS
    USERS,
    FILMS,
    FILMS_LIKES,
    FRIENDS,
    MPA_RATINGS,
    FILMS_GENRES,
    GENRES CASCADE;

CREATE TABLE IF NOT EXISTS MPA_RATINGS (
    MPA_ID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    MPA_NAME      varchar(10),
    CONSTRAINT uc_name UNIQUE (MPA_NAME)
);

CREATE TABLE IF NOT EXISTS GENRES (
    GENRE_ID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    NAME     VARCHAR(30) NOT NULL,
    CONSTRAINT genre_name UNIQUE (NAME)
);

CREATE TABLE IF NOT EXISTS FILMS (
    FILM_ID      INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    NAME         VARCHAR(150),

    DESCRIPTION  VARCHAR(500) NOT NULL,
    RELEASE_DATE DATE         NOT NULL,
    DURATION     INTEGER      NOT NULL,
    MPA_ID    INTEGER REFERENCES MPA_RATINGS (MPA_ID)
);

CREATE TABLE IF NOT EXISTS USERS (
    USER_ID   INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    EMAIL     VARCHAR(50) NOT NULL,
    LOGIN     VARCHAR(50) NOT NULL,
    USER_NAME VARCHAR(50) NOT NULL,
    BIRTHDAY  DATE        NOT NULL,
    CONSTRAINT user_email UNIQUE (EMAIL),
    CONSTRAINT user_login UNIQUE (LOGIN)
);

CREATE TABLE IF NOT EXISTS FILMS_LIKES (
    FILM_ID INTEGER NOT NULL,
    USER_ID INTEGER NOT NULL,
    CONSTRAINT film_like PRIMARY KEY (FILM_ID, USER_ID),
    CONSTRAINT film_like_film_id FOREIGN KEY (FILM_ID) REFERENCES FILMS (FILM_ID),
    CONSTRAINT film_like_user_id FOREIGN KEY (USER_ID) REFERENCES USERS (USER_ID)
);

CREATE TABLE IF NOT EXISTS FRIENDS (
    USER_ID   INTEGER NOT NULL,
    FRIEND_ID INTEGER NOT NULL,
    CONSTRAINT friendship PRIMARY KEY (USER_ID, FRIEND_ID),
    CONSTRAINT friendship_user_id1 FOREIGN KEY (USER_ID) REFERENCES users (USER_ID),
    CONSTRAINT friendship_user_id2 FOREIGN KEY (FRIEND_ID) REFERENCES users (USER_ID)
);

CREATE TABLE IF NOT EXISTS FILMS_GENRES (
    FILM_ID  INTEGER NOT NULL,
    GENRE_ID INTEGER NOT NULL,
    CONSTRAINT GENRE_FILM PRIMARY KEY (FILM_ID, GENRE_ID),
    CONSTRAINT GENRE_FILM_film_id FOREIGN KEY (FILM_ID) REFERENCES FILMS (FILM_ID),
    CONSTRAINT GENRE_FILM_genre_id FOREIGN KEY (GENRE_ID) REFERENCES GENRES (GENRE_ID)
);

DELETE FROM MPA_RATINGS;
INSERT INTO MPA_RATINGS (MPA_NAME)
VALUES('G'),
      ('PG'),
      ('PG-13'),
      ('R'),
      ('NC-17');

DELETE FROM GENRES;
INSERT INTO GENRES (NAME)
VALUES('Комедия'),
      ('Драма'),
      ('Мультфильм'),
      ('Триллер'),
      ('Документальный'),
      ('Боевик');